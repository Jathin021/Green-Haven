version: '3.8'

services:
  # MongoDB Database (Production)
  mongodb:
    image: mongo:7.0
    container_name: green-haven-mongodb-prod
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
    volumes:
      - mongodb_data_prod:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - green-haven-network

  # Backend API (Production)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: green-haven-backend-prod
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=${MONGO_URL:-mongodb://admin:password@mongodb:27017}
      - SECRET_KEY=${SECRET_KEY}
      - PAYPAL_MODE=${PAYPAL_MODE:-sandbox}
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_SECRET=${PAYPAL_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - ADMIN_RESET_TOKEN=${ADMIN_RESET_TOKEN}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
    command: uvicorn server:app --host 0.0.0.0 --port 8001 --workers 4
    networks:
      - green-haven-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App (Production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: green-haven-frontend-prod
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
      - REACT_APP_PAYPAL_CLIENT_ID=${REACT_APP_PAYPAL_CLIENT_ID}
    depends_on:
      - backend
    networks:
      - green-haven-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: green-haven-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - green-haven-network

volumes:
  mongodb_data_prod:
    driver: local

networks:
  green-haven-network:
    driver: bridge 